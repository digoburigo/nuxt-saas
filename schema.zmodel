// This is a sample model to get you started.

/**
 * A sample data source using local sqlite db.
 */
datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

plugin hooks {
    provider = '@zenstackhq/tanstack-query'
    target = 'vue'
    output = 'lib/hooks'
}   

/**
 * User model
 */
model User {
    id        String    @id @default(nanoid())
    firstName String?
    lastName  String?
    name      String?
    email     String    @unique @email
    password  String    @password @omit @length(8, 16)

    // auth
    // lucia-auth
    sessions      Session[]
    accounts      Account[]
    tokens        Token[]

    // everybody can signup
    @@allow('create', true)

    // full access by self
    @@allow('all', auth() == this)
}

model Session {
    id        String   @id @default(nanoid())
    expiresAt DateTime

    user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
    userId    String
}



model Account {
  id                 String  @id @default(nanoid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

// enum TokenType {
//     RESET_PASSWORD
//     VERIFY_EMAIL
//     TEAM_INVITE
// }

model Token {
    id          String   @id @default(nanoid())
    userId      String
    user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    type        String
    expiresAt   DateTime
    token       String
    sentTo      String @email
}